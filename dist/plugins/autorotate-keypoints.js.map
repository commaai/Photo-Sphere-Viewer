{"version":3,"file":"autorotate-keypoints.js","sources":["../../src/plugins/autorotate-keypoints/index.js"],"sourcesContent":["import { SplineCurve, Vector2 } from 'three';\nimport { AbstractPlugin, CONSTANTS, PSVError, utils } from '../..';\n\n/**\n * @typedef {Object} PSV.plugins.AutorotateKeypointsPlugin.KeypointObject\n * @property {PSV.ExtendedPosition} [position]\n * @property {string} [markerId] - use the position and tooltip of a marker\n * @property {number} [pause=0] - pause the animation when reaching this point, will display the tooltip if available\n * @property {string|{content: string, position: string}} [tooltip]\n */\n\n/**\n * @typedef {PSV.ExtendedPosition|string|PSV.plugins.AutorotateKeypointsPlugin.KeypointObject} PSV.plugins.AutorotateKeypointsPlugin.Keypoint\n * @summary Definition of keypoints for automatic rotation, can be a position object, a marker id or an keypoint object\n */\n\n/**\n * @typedef {Object} PSV.plugins.AutorotateKeypointsPlugin.Options\n * @property {boolean} [startFromClosest=true] - start from the closest keypoint instead of the first keypoint\n * @property {PSV.plugins.AutorotateKeypointsPlugin.Keypoint[]} keypoints\n */\n\n\nconst NUM_STEPS = 16;\n\nfunction serializePt(position) {\n  return [position.longitude, position.latitude];\n}\n\n\n/**\n * @summary Replaces the standard autorotate animation by a smooth transition between multiple points\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class AutorotateKeypointsPlugin extends AbstractPlugin {\n\n  static id = 'autorotate-keypoints';\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.AutorotateKeypointsPlugin.Options} [options]\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {Object}\n     * @property {number} idx -  current index in keypoints\n     * @property {number[][]} curve - curve between idx and idx + 1\n     * @property {number[]} startStep - start point of the current step\n     * @property {number[]} endStep - end point of the current step\n     * @property {number} startTime - start time of the current step\n     * @property {number} stepDuration - expected duration of the step\n     * @property {number} remainingPause - time remaining for the pause\n     * @property {number} lastTime - previous timestamp in render loop\n     * @property {PSV.components.Tooltip} tooltip - currently displayed tooltip\n     * @private\n     */\n    this.state = {};\n\n    /**\n     * @member {PSV.plugins.AutorotateKeypointsPlugin.Options}\n     * @private\n     */\n    this.config = {\n      startFromClosest: true,\n      ...options,\n    };\n\n    /**\n     * @type {PSV.plugins.AutorotateKeypointsPlugin.Keypoint[]} keypoints\n     */\n    this.keypoints = null;\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin}\n     * @private\n     */\n    this.markers = null;\n  }\n\n  /**\n   * @package\n   */\n  init() {\n    super.init();\n\n    this.markers = this.psv.getPlugin('markers');\n\n    if (this.config.keypoints) {\n      this.setKeypoints(this.config.keypoints);\n      delete this.config.keypoints;\n    }\n\n    this.psv.on(CONSTANTS.EVENTS.AUTOROTATE, this);\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.AUTOROTATE, this);\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n\n    delete this.markers;\n    delete this.keypoints;\n\n    super.destroy();\n  }\n\n  /**\n   * @private\n   */\n  handleEvent(e) {\n    if (e.type === CONSTANTS.EVENTS.AUTOROTATE) {\n      this.__configure();\n    }\n    else if (e.type === CONSTANTS.EVENTS.BEFORE_RENDER) {\n      this.__beforeRender(e.args[0]);\n    }\n  }\n\n  /**\n   * @summary Changes the keypoints\n   * @param {PSV.plugins.AutorotateKeypointsPlugin.Keypoint[]} keypoints\n   */\n  setKeypoints(keypoints) {\n    if (keypoints?.length < 2) {\n      throw new PSVError('At least two points are required');\n    }\n\n    this.keypoints = utils.clone(keypoints);\n\n    if (this.keypoints) {\n      this.keypoints.forEach((pt, i) => {\n        if (typeof pt === 'string') {\n          pt = { markerId: pt };\n        }\n        else if (utils.isExtendedPosition(pt)) {\n          pt = { position: pt };\n        }\n        if (pt.markerId) {\n          if (!this.markers) {\n            throw new PSVError(`Keypoint #${i} references a marker but the markers plugin is not loaded`);\n          }\n          const marker = this.markers.getMarker(pt.markerId);\n          pt.position = serializePt(marker.props.position);\n        }\n        else if (pt.position) {\n          pt.position = serializePt(this.psv.dataHelper.cleanPosition(pt.position));\n        }\n        else {\n          throw new PSVError(`Keypoint #${i} is missing marker or position`);\n        }\n\n        if (typeof pt.tooltip === 'string') {\n          pt.tooltip = { content: pt.tooltip };\n        }\n\n        this.keypoints[i] = pt;\n      });\n    }\n\n    this.__configure();\n  }\n\n  /**\n   * @private\n   */\n  __configure() {\n    if (!this.psv.isAutorotateEnabled() || !this.keypoints) {\n      this.__hideTooltip();\n      this.state = {};\n      return;\n    }\n\n    // cancel core rotation\n    this.psv.dynamics.position.stop();\n\n    this.state = {\n      idx           : -1,\n      curve         : [],\n      startStep     : null,\n      endStep       : null,\n      startTime     : null,\n      stepDuration  : null,\n      remainingPause: null,\n      lastTime      : null,\n      tooltip       : null,\n    };\n\n    if (this.config.startFromClosest) {\n      const currentPosition = serializePt(this.psv.getPosition());\n      const index = this.__findMinIndex(this.keypoints, (keypoint) => {\n        return utils.greatArcDistance(keypoint.position, currentPosition);\n      });\n\n      this.keypoints.push(...this.keypoints.splice(0, index));\n    }\n  }\n\n  /**\n   * @private\n   */\n  __beforeRender(timestamp) {\n    if (this.psv.isAutorotateEnabled()) {\n      // initialisation\n      if (!this.state.startTime) {\n        this.state.endStep = serializePt(this.psv.getPosition());\n        this.__nextStep();\n\n        this.state.startTime = timestamp;\n        this.state.lastTime = timestamp;\n      }\n\n      this.__nextFrame(timestamp);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __incrementIdx() {\n    this.state.idx++;\n    if (this.state.idx === this.keypoints.length) {\n      this.state.idx = 0;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __showTooltip() {\n    const keypoint = this.keypoints[this.state.idx];\n\n    if (keypoint.tooltip) {\n      const position = this.psv.dataHelper.vector3ToViewerCoords(this.psv.prop.direction);\n\n      this.state.tooltip = this.psv.tooltip.create({\n        content : keypoint.tooltip.content,\n        position: keypoint.tooltip.position,\n        top     : position.y,\n        left    : position.x,\n      });\n    }\n    else if (keypoint.markerId) {\n      const marker = this.markers.getMarker(keypoint.markerId);\n      marker.showTooltip();\n      this.state.tooltip = marker.tooltip;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __hideTooltip() {\n    if (this.state.tooltip) {\n      const keypoint = this.keypoints[this.state.idx];\n\n      if (keypoint.tooltip) {\n        this.state.tooltip.hide();\n      }\n      else if (keypoint.markerId) {\n        const marker = this.markers.getMarker(keypoint.markerId);\n        marker.hideTooltip();\n      }\n\n      this.state.tooltip = null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextPoint() {\n    // get the 4 points necessary to compute the current movement\n    // the two points of the current segments and one point before and after\n    const workPoints = [];\n    if (this.state.idx === -1) {\n      const currentPosition = serializePt(this.psv.getPosition());\n      workPoints.push(\n        currentPosition,\n        currentPosition,\n        this.keypoints[0].position,\n        this.keypoints[1].position\n      );\n    }\n    else {\n      for (let i = -1; i < 3; i++) {\n        const keypoint = this.state.idx + i < 0\n          ? this.keypoints[this.keypoints.length - 1]\n          : this.keypoints[(this.state.idx + i) % this.keypoints.length];\n        workPoints.push(keypoint.position);\n      }\n    }\n\n    // apply offsets to avoid crossing the origin\n    const workVectors = [new Vector2(workPoints[0][0], workPoints[0][1])];\n\n    let k = 0;\n    for (let i = 1; i <= 3; i++) {\n      const d = workPoints[i - 1][0] - workPoints[i][0];\n      if (d > Math.PI) { // crossed the origin left to right\n        k += 1;\n      }\n      else if (d < -Math.PI) { // crossed the origin right to left\n        k -= 1;\n      }\n      if (k !== 0 && i === 1) {\n        // do not modify first point, apply the reverse offset the the previous point instead\n        workVectors[0].x -= k * 2 * Math.PI;\n        k = 0;\n      }\n      workVectors.push(new Vector2(workPoints[i][0] + k * 2 * Math.PI, workPoints[i][1]));\n    }\n\n    const curve = new SplineCurve(workVectors)\n      .getPoints(NUM_STEPS * 3)\n      .map(p => ([p.x, p.y]));\n\n    // debugCurve(this.markers, curve, NUM_STEPS);\n\n    // only keep the curve for the current movement\n    this.state.curve = curve.slice(NUM_STEPS + 1, NUM_STEPS * 2 + 1);\n\n    if (this.state.idx !== -1) {\n      this.state.remainingPause = this.keypoints[this.state.idx].pause;\n\n      if (this.state.remainingPause) {\n        this.__showTooltip();\n      }\n      else {\n        this.__incrementIdx();\n      }\n    }\n    else {\n      this.__incrementIdx();\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextStep() {\n    if (this.state.curve.length === 0) {\n      this.__nextPoint();\n\n      // reset transformation made to the previous point\n      this.state.endStep[0] = utils.parseAngle(this.state.endStep[0]);\n    }\n\n    // target next point\n    this.state.startStep = this.state.endStep;\n    this.state.endStep = this.state.curve.shift();\n\n    // compute duration from distance and speed\n    const distance = utils.greatArcDistance(this.state.startStep, this.state.endStep);\n    this.state.stepDuration = distance * 1000 / Math.abs(this.psv.config.autorotateSpeed);\n\n    if (distance === 0) { // edge case\n      this.__nextStep();\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextFrame(timestamp) {\n    const ellapsed = timestamp - this.state.lastTime;\n    this.state.lastTime = timestamp;\n\n    // currently paused\n    if (this.state.remainingPause) {\n      this.state.remainingPause = Math.max(0, this.state.remainingPause - ellapsed);\n      if (this.state.remainingPause > 0) {\n        return;\n      }\n      else {\n        this.__hideTooltip();\n        this.__incrementIdx();\n        this.state.startTime = timestamp;\n      }\n    }\n\n    let progress = (timestamp - this.state.startTime) / this.state.stepDuration;\n    if (progress >= 1) {\n      this.__nextStep();\n      progress = 0;\n      this.state.startTime = timestamp;\n    }\n\n    this.psv.rotate({\n      longitude: this.state.startStep[0] + (this.state.endStep[0] - this.state.startStep[0]) * progress,\n      latitude : this.state.startStep[1] + (this.state.endStep[1] - this.state.startStep[1]) * progress,\n    });\n  }\n\n  /**\n   * @private\n   */\n  __findMinIndex(array, mapper) {\n    let idx = 0;\n    let current = Number.MAX_VALUE;\n\n    array.forEach((item, i) => {\n      const value = mapper ? mapper(item) : item;\n      if (value < current) {\n        current = value;\n        idx = i;\n      }\n    });\n\n    return idx;\n  }\n\n}\n"],"names":["NUM_STEPS","serializePt","position","longitude","latitude","AutorotateKeypointsPlugin","psv","options","state","config","startFromClosest","keypoints","markers","init","getPlugin","setKeypoints","on","CONSTANTS","EVENTS","AUTOROTATE","BEFORE_RENDER","destroy","off","handleEvent","e","type","__configure","__beforeRender","args","length","PSVError","utils","clone","forEach","pt","i","markerId","isExtendedPosition","marker","getMarker","props","dataHelper","cleanPosition","tooltip","content","isAutorotateEnabled","__hideTooltip","dynamics","stop","idx","curve","startStep","endStep","startTime","stepDuration","remainingPause","lastTime","currentPosition","getPosition","index","__findMinIndex","keypoint","greatArcDistance","push","splice","timestamp","__nextStep","__nextFrame","__incrementIdx","__showTooltip","vector3ToViewerCoords","prop","direction","create","top","y","left","x","showTooltip","hide","hideTooltip","__nextPoint","workPoints","workVectors","Vector2","k","d","Math","PI","SplineCurve","getPoints","map","p","slice","pause","parseAngle","shift","distance","abs","autorotateSpeed","ellapsed","max","progress","rotate","array","mapper","current","Number","MAX_VALUE","item","value","AbstractPlugin","id"],"mappings":"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"}