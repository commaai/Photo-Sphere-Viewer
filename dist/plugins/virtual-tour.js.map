{"version":3,"file":"virtual-tour.js","sources":["../../src/plugins/virtual-tour/AbstractDatasource.js","../../src/plugins/virtual-tour/utils.js","../../src/plugins/virtual-tour/ClientSideDatasource.js","../../src/plugins/virtual-tour/constants.js","../../src/plugins/virtual-tour/ServerSideDatasource.js","../../src/plugins/virtual-tour/index.js"],"sourcesContent":["import { PSVError } from 'photo-sphere-viewer';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class AbstractDatasource {\n\n  /**\n   * @type {Record<string, PSV.plugins.VirtualTourPlugin.Node>}\n   */\n  nodes = {};\n\n  /**\n   * @param {PSV.plugins.VirtualTourPlugin} plugin\n   */\n  constructor(plugin) {\n    this.plugin = plugin;\n  }\n\n  destroy() {\n    delete this.plugin;\n  }\n\n  /**\n   * @summary Loads a node\n   * @param {string} nodeId\n   * @return {Promise<PSV.plugins.VirtualTourPlugin.Node>}\n   */\n  loadNode(nodeId) { // eslint-disable-line no-unused-vars\n    throw new PSVError('loadNode not implemented');\n  }\n\n}\n","import { PSVError, utils } from 'photo-sphere-viewer';\n\n/**\n * @summary Checks the configuration of a node\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {boolean} isGps\n * @private\n */\nexport function checkNode(node, isGps) {\n  if (!node.id) {\n    throw new PSVError('No id given for node');\n  }\n  if (!node.panorama) {\n    throw new PSVError(`No panorama provided for node ${node.id}`);\n  }\n  if (isGps && !(node.position?.length >= 2)) {\n    throw new PSVError(`No position provided for node ${node.id}`);\n  }\n}\n\n/**\n * @summary Checks the configuration of a link\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n * @param {boolean} isGps\n * @private\n */\nexport function checkLink(node, link, isGps) {\n  if (!link.nodeId) {\n    throw new PSVError(`Link of node ${node.id} has no target id`);\n  }\n  if (!isGps && !utils.isExtendedPosition(link)) {\n    throw new PSVError(`No position provided for link ${link.nodeId} of node ${node.id}`);\n  }\n  if (isGps && !link.position) {\n    throw new PSVError(`No GPS position provided for link ${link.nodeId} of node ${node.id}`);\n  }\n}\n\n/**\n * @summary Changes the color of a mesh\n * @param {external:THREE.Mesh} mesh\n * @param {*} color\n * @private\n */\nexport function setMeshColor(mesh, color) {\n  mesh.material.color.set(color);\n}\n\n/**\n * @summary Returns the distance between two GPS points\n * @param {number[]} p1\n * @param {number[]} p2\n * @return {number}\n * @private\n */\nexport function distance(p1, p2) {\n  return utils.greatArcDistance(p1, p2) * 6371e3;\n}\n\n/**\n * @summary Returns the bearing between two GPS points\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\n * @param {number[]} p1\n * @param {number[]} p2\n * @return {number}\n * @private\n */\nexport function bearing(p1, p2) {\n  const [λ1, φ1] = p1;\n  const [λ2, φ2] = p2;\n\n  const y = Math.sin(λ2 - λ1) * Math.cos(φ2);\n  const x = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(λ2 - λ1);\n  return Math.atan2(y, x);\n}\n","import { PSVError, utils } from 'photo-sphere-viewer';\nimport { AbstractDatasource } from './AbstractDatasource';\nimport { checkLink, checkNode } from './utils';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class ClientSideDatasource extends AbstractDatasource {\n\n  loadNode(nodeId) {\n    if (this.nodes[nodeId]) {\n      return Promise.resolve(this.nodes[nodeId]);\n    }\n    else {\n      return Promise.reject(new PSVError(`Node ${nodeId} not found`));\n    }\n  }\n\n  setNodes(rawNodes) {\n    if (!rawNodes?.length) {\n      throw new PSVError('No nodes provided');\n    }\n\n    const nodes = {};\n    const linkedNodes = {};\n\n    rawNodes.forEach((node) => {\n      checkNode(node, this.plugin.isGps());\n\n      if (nodes[node.id]) {\n        throw new PSVError(`Duplicate node ${node.id}`);\n      }\n      if (!node.links) {\n        utils.logWarn(`Node ${node.id} has no links`);\n        node.links = [];\n      }\n\n      nodes[node.id] = node;\n    });\n\n    rawNodes.forEach((node) => {\n      node.links.forEach((link) => {\n        if (!nodes[link.nodeId]) {\n          throw new PSVError(`Target node ${link.nodeId} of node ${node.id} does not exists`);\n        }\n\n        // copy essential data\n        link.position = link.position || nodes[link.nodeId].position;\n        link.name = link.name || nodes[link.nodeId].name;\n\n        checkLink(node, link, this.plugin.isGps());\n\n        linkedNodes[link.nodeId] = true;\n      });\n    });\n\n    rawNodes.forEach((node) => {\n      if (!linkedNodes[node.id]) {\n        utils.logWarn(`Node ${node.id} is never linked to`);\n      }\n    });\n\n    this.nodes = nodes;\n  }\n\n}\n","import { ObjectLoader } from 'three';\nimport arrowGeometryJson from './arrow.json';\nimport arrowIconSvg from './arrow.svg';\nimport arrowOutlineGeometryJson from './arrow_outline.json';\n\n/**\n * @summary In client mode all the nodes are provided in the config or with the `setNodes` method\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_CLIENT = 'client';\n\n/**\n * @summary In server mode the nodes are fetched asynchronously\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_SERVER = 'server';\n\n/**\n * @summary In manual mode each link is positionned manually on the panorama\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_MANUAL = 'manual';\n\n/**\n * @summary In GPS mode each node is globally positionned and the links are automatically computed\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_GPS = 'gps';\n\n/**\n * @summaru In markers mode the links are represented using markers\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_MARKERS = 'markers';\n\n/**\n * @summaru In 3D mode the links are represented using 3d arrows\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_3D = '3d';\n\n/**\n * @summary Available events\n * @enum {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const EVENTS = {\n  /**\n   * @event node-changed\n   * @memberof PSV.plugins.VirtualTourPlugin\n   * @summary Triggered when the current node changes\n   * @param {string} nodeId\n   */\n  NODE_CHANGED     : 'node-changed',\n};\n\n/**\n * @summary Property name added to markers\n * @type {string}\n * @constant\n * @private\n */\nexport const LINK_DATA = 'tourLink';\n\n/**\n * @summary Default style of the link marker\n * @type {PSV.plugins.MarkersPlugin.Properties}\n * @constant\n * @private\n */\nexport const DEFAULT_MARKER = {\n  html     : arrowIconSvg,\n  width    : 80,\n  height   : 80,\n  scale    : [0.5, 2],\n  anchor   : 'top center',\n  className: 'psv-virtual-tour__marker',\n  style    : {\n    color: 'rgba(0, 208, 255, 0.8)',\n  },\n};\n\n/**\n * @summary Default style of the link arrow\n * @type {PSV.plugins.VirtualTourPlugin.ArrowStyle}\n * @constant\n * @private\n */\nexport const DEFAULT_ARROW = {\n  color       : 0xaaaaaa,\n  hoverColor  : 0xaa5500,\n  outlineColor: 0x000000,\n  scale       : [0.5, 2],\n};\n\n/**\n * @type {external:THREE.BufferedGeometry}\n * @constant\n * @private\n */\nexport const { ARROW_GEOM, ARROW_OUTLINE_GEOM } = (() => {\n  const loader = new ObjectLoader();\n  const geometries = loader.parseGeometries([arrowGeometryJson, arrowOutlineGeometryJson]);\n  const arrow = geometries[arrowGeometryJson.uuid];\n  const arrowOutline = geometries[arrowOutlineGeometryJson.uuid];\n  const scale = 0.015;\n  const rot = Math.PI / 2;\n  arrow.scale(scale, scale, scale);\n  arrow.rotateX(rot);\n  arrowOutline.scale(scale, scale, scale);\n  arrowOutline.rotateX(rot);\n  return { ARROW_GEOM: arrow, ARROW_OUTLINE_GEOM: arrowOutline };\n})();\n","import { PSVError, utils } from 'photo-sphere-viewer';\nimport { AbstractDatasource } from './AbstractDatasource';\nimport { checkLink, checkNode } from './utils';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class ServerSideDatasource extends AbstractDatasource {\n\n  constructor(plugin) {\n    super(plugin);\n\n    if (!plugin.config.getNode) {\n      throw new PSVError('Missing getNode() option.');\n    }\n\n    this.nodeResolver = plugin.config.getNode;\n  }\n\n  loadNode(nodeId) {\n    if (this.nodes[nodeId]) {\n      return Promise.resolve(this.nodes[nodeId]);\n    }\n    else {\n      return Promise.resolve(this.nodeResolver(nodeId))\n        .then((node) => {\n          checkNode(node, this.plugin.isGps());\n          if (!node.links) {\n            utils.logWarn(`Node ${node.id} has no links`);\n            node.links = [];\n          }\n\n          node.links.forEach((link) => {\n            // copy essential data\n            if (this.nodes[link.nodeId]) {\n              link.position = link.position || this.nodes[link.nodeId].position;\n              link.name = link.name || this.nodes[link.nodeId].name;\n            }\n\n            checkLink(node, link, this.plugin.isGps());\n          });\n\n          this.nodes[nodeId] = node;\n          return node;\n        });\n    }\n  }\n\n}\n","import {\n  AmbientLight,\n  BackSide,\n  Group,\n  MathUtils,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  PointLight\n} from 'three';\nimport { AbstractPlugin, CONSTANTS, PSVError, utils } from '../..';\nimport { ClientSideDatasource } from './ClientSideDatasource';\nimport {\n  ARROW_GEOM,\n  ARROW_OUTLINE_GEOM,\n  DEFAULT_ARROW,\n  DEFAULT_MARKER,\n  EVENTS,\n  LINK_DATA,\n  MODE_3D,\n  MODE_CLIENT,\n  MODE_GPS,\n  MODE_MANUAL,\n  MODE_MARKERS,\n  MODE_SERVER\n} from './constants';\nimport { ServerSideDatasource } from './ServerSideDatasource';\nimport './style.scss';\nimport { bearing, distance, setMeshColor } from './utils';\n\n\n/**\n * @callback GetNode\n * @summary Function to load a node\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @param {string} nodeId\n * @returns {PSV.plugins.VirtualTourPlugin.Node|Promise<PSV.plugins.VirtualTourPlugin.Node>}\n */\n\n/**\n * @callback Preload\n * @summary Function to determine if a link must be preloaded\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n * @returns {boolean}\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.Node\n * @summary Definition of a single node in the tour\n * @property {string} id - unique identifier of the node\n * @property {*} panorama\n * @property {PSV.plugins.VirtualTourPlugin.NodeLink[]} [links] - links to other nodes\n * @property {number[]} [position] - GPS position (longitude, latitude, optional altitude)\n * @property {PSV.PanoData | PSV.PanoDataProvider} [panoData] - data used for this panorama\n * @property {PSV.SphereCorrection} [sphereCorrection] - sphere correction to apply to this panorama\n * @property {string} [name] - short name of the node\n * @property {string} [caption] - caption visible in the navbar\n * @property {string} [description] - description visible in the side panel\n * @property {string} [thumbnail] - thumbnail for the gallery\n * @property {PSV.plugins.MarkersPlugin.Properties[]} [markers] - additional markers to use on this node\n */\n\n/**\n * @typedef {PSV.ExtendedPosition} PSV.plugins.VirtualTourPlugin.NodeLink\n * @summary Definition of a link between two nodes\n * @property {string} nodeId - identifier of the target node\n * @property {string} [name] - override the name of the node (tooltip)\n * @property {number[]} [position] - override the GPS position of the node\n * @property {PSV.plugins.MarkersPlugin.Properties} [markerStyle] - override global marker style\n * @property {PSV.plugins.VirtualTourPlugin.ArrowStyle} [arrowStyle] - override global arrow style\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.ArrowStyle\n * @summary Style of the arrow in 3D mode\n * @property {string} [color=0xaaaaaa]\n * @property {string} [hoverColor=0xaa5500]\n * @property {number} [outlineColor=0x000000]\n * @property {number[]} [scale=[0.5,2]]\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.Options\n * @property {'client'|'server'} [dataMode='client'] - configure data mode\n * @property {'manual'|'gps'} [positionMode='manual'] - configure positioning mode\n * @property {'markers'|'3d'} [renderMode='3d'] - configure rendering mode of links\n * @property {PSV.plugins.VirtualTourPlugin.Node[]} [nodes] - initial nodes\n * @property {PSV.plugins.VirtualTourPlugin.GetNode} [getNode]\n * @property {string} [startNodeId] - id of the initial node, if not defined the first node will be used\n * @property {boolean|PSV.plugins.VirtualTourPlugin.Preload} [preload=false] - preload linked panoramas\n * @property {boolean|string|number} [rotateSpeed='20rpm'] - speed of rotation when clicking on a link, if 'false' the viewer won't rotate at all\n * @property {boolean|number} [transition=1500] - duration of the transition between nodes\n * @property {boolean} [linksOnCompass] - if the Compass plugin is enabled, displays the links on the compass, defaults to `true` on in markers render mode\n * @property {PSV.plugins.MarkersPlugin.Properties} [markerStyle] - global marker style\n * @property {PSV.plugins.VirtualTourPlugin.ArrowStyle} [arrowStyle] - global arrow style\n * @property {number} [markerLatOffset=-0.1] - (GPS & Markers mode) latitude offset applied to link markers, to compensate for viewer height\n * @property {'top'|'bottom'} [arrowPosition='bottom'] - (3D mode) arrows vertical position\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.NodeChangedData\n * @summary Data associated to the \"node-changed\" event\n * @type {PSV.plugins.VirtualTourPlugin.Node} [fromNode] - The previous node\n * @type {PSV.plugins.VirtualTourPlugin.NodeLink} [fromLink] - The link that was clicked in the previous node\n * @type {PSV.Position} [fromLinkPosition] - The position of the link on the previous node\n */\n\n\nexport { EVENTS, MODE_3D, MODE_CLIENT, MODE_GPS, MODE_MANUAL, MODE_MARKERS, MODE_SERVER } from './constants';\n\n\n/**\n * @summary Create virtual tours by linking multiple panoramas\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class VirtualTourPlugin extends AbstractPlugin {\n\n  static id = 'virtual-tour';\n\n  static EVENTS = EVENTS;\n  static MODE_CLIENT = MODE_CLIENT;\n  static MODE_SERVER = MODE_SERVER;\n  static MODE_3D = MODE_3D;\n  static MODE_MARKERS = MODE_MARKERS;\n  static MODE_MANUAL = MODE_MANUAL;\n  static MODE_GPS = MODE_GPS;\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.VirtualTourPlugin.Options} [options]\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {Object}\n     * @property {PSV.plugins.VirtualTourPlugin.Node} currentNode\n     * @property {PSV.Tooltip} currentTooltip\n     * @property {string} loadingNode\n     * @property {function} stopObserver\n     * @private\n     */\n    this.prop = {\n      currentNode   : null,\n      currentTooltip: null,\n      loadingNode   : null,\n      stopObserver  : null,\n    };\n\n    /**\n     * @type {Record<string, boolean | Promise>}\n     * @private\n     */\n    this.preload = {};\n\n    /**\n     * @member {PSV.plugins.VirtualTourPlugin.Options}\n     * @private\n     */\n    this.config = {\n      dataMode       : MODE_CLIENT,\n      positionMode   : MODE_MANUAL,\n      renderMode     : MODE_3D,\n      preload        : false,\n      rotateSpeed    : '20rpm',\n      transition     : CONSTANTS.DEFAULT_TRANSITION,\n      markerLatOffset: -0.1,\n      arrowPosition  : 'bottom',\n      linksOnCompass : options?.renderMode === MODE_MARKERS,\n      ...options,\n      markerStyle: {\n        ...DEFAULT_MARKER,\n        ...options?.markerStyle,\n      },\n      arrowStyle : {\n        ...DEFAULT_ARROW,\n        ...options?.arrowStyle,\n      },\n    };\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin}\n     * @private\n     */\n    this.markers = null;\n\n    /**\n     * @type {PSV.plugins.CompassPlugin}\n     * @private\n     */\n    this.compass = null;\n\n    /**\n     * @type {PSV.plugins.GalleryPlugin}\n     * @private\n     */\n    this.gallery = null;\n\n    /**\n     * @type {PSV.plugins.VirtualTourPlugin.AbstractDatasource}\n     */\n    this.datasource = null;\n\n    /**\n     * @type {external:THREE.Group}\n     * @private\n     */\n    this.arrowsGroup = null;\n\n    if (this.is3D()) {\n      this.arrowsGroup = new Group();\n\n      const localLight = new PointLight(0xffffff, 1, 0);\n      localLight.position.set(0, this.config.arrowPosition === 'bottom' ? 2 : -2, 0);\n      this.arrowsGroup.add(localLight);\n    }\n  }\n\n  /**\n   * @package\n   */\n  init() {\n    super.init();\n\n    this.markers = this.psv.getPlugin('markers');\n    this.compass = this.psv.getPlugin('compass');\n    this.gallery = this.psv.getPlugin('gallery');\n\n    if (!this.is3D() && !this.markers) {\n      throw new PSVError('VirtualTour plugin requires the Markers plugin in markers mode.');\n    }\n\n    if (this.markers?.config.markers) {\n      utils.logWarn('No default markers can be configured on Markers plugin when using VirtualTour plugin. '\n        + 'Consider defining `markers` on each tour node.');\n      delete this.markers.config.markers;\n    }\n\n    this.datasource = this.isServerSide() ? new ServerSideDatasource(this) : new ClientSideDatasource(this);\n\n    if (this.is3D()) {\n      this.psv.once(CONSTANTS.EVENTS.READY, () => {\n        this.__positionArrows();\n        this.psv.renderer.scene.add(this.arrowsGroup);\n\n        const ambientLight = new AmbientLight(0xffffff, 1);\n        this.psv.renderer.scene.add(ambientLight);\n\n        this.psv.needsUpdate();\n      });\n\n      this.psv.on(CONSTANTS.EVENTS.POSITION_UPDATED, this);\n      this.psv.on(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\n      this.psv.on(CONSTANTS.EVENTS.CLICK, this);\n      this.prop.stopObserver = this.psv.observeObjects(LINK_DATA, this);\n    }\n    else {\n      this.markers.on('select-marker', this);\n    }\n\n    if (this.isServerSide()) {\n      if (this.config.startNodeId) {\n        this.setCurrentNode(this.config.startNodeId);\n      }\n    }\n    else if (this.config.nodes) {\n      this.setNodes(this.config.nodes, this.config.startNodeId);\n      delete this.config.nodes;\n    }\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    if (this.markers) {\n      this.markers.off('select-marker', this);\n    }\n    if (this.arrowsGroup) {\n      this.psv.renderer.scene.remove(this.arrowsGroup);\n    }\n\n    this.psv.off(CONSTANTS.EVENTS.POSITION_UPDATED, this);\n    this.psv.off(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\n    this.psv.off(CONSTANTS.EVENTS.CLICK, this);\n    this.prop.stopObserver?.();\n\n    this.datasource.destroy();\n\n    delete this.preload;\n    delete this.datasource;\n    delete this.markers;\n    delete this.compass;\n    delete this.gallery;\n    delete this.arrowsGroup;\n\n    super.destroy();\n  }\n\n  handleEvent(e) {\n    let link;\n    switch (e.type) {\n      case 'select-marker':\n        link = e.args[0].data?.[LINK_DATA];\n        if (link) {\n          this.setCurrentNode(link.nodeId, link);\n        }\n        break;\n\n      case CONSTANTS.EVENTS.POSITION_UPDATED:\n      case CONSTANTS.EVENTS.ZOOM_UPDATED:\n        if (this.arrowsGroup) {\n          this.__positionArrows();\n        }\n        break;\n\n      case CONSTANTS.EVENTS.CLICK:\n        link = e.args[0].objects.find(o => o.userData[LINK_DATA])?.userData[LINK_DATA];\n        if (link) {\n          this.setCurrentNode(link.nodeId, link);\n        }\n        break;\n\n      case CONSTANTS.OBJECT_EVENTS.ENTER_OBJECT:\n        this.__onEnterObject(e.detail.object, e.detail.viewerPoint);\n        break;\n      case CONSTANTS.OBJECT_EVENTS.HOVER_OBJECT:\n        this.__onHoverObject(e.detail.object, e.detail.viewerPoint);\n        break;\n      case CONSTANTS.OBJECT_EVENTS.LEAVE_OBJECT:\n        this.__onLeaveObject(e.detail.object);\n        break;\n\n      default:\n    }\n  }\n\n  /**\n   * @summary Tests if running in server mode\n   * @return {boolean}\n   */\n  isServerSide() {\n    return this.config.dataMode === MODE_SERVER;\n  }\n\n  /**\n   * @summary Tests if running in GPS mode\n   * @return {boolean}\n   */\n  isGps() {\n    return this.config.positionMode === MODE_GPS;\n  }\n\n  /**\n   * @summary Tests if running in 3D mode\n   * @return {boolean}\n   */\n  is3D() {\n    return this.config.renderMode === MODE_3D;\n  }\n\n  /**\n   * @summary Sets the nodes (client mode only)\n   * @param {PSV.plugins.VirtualTourPlugin.Node[]} nodes\n   * @param {string} [startNodeId]\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  setNodes(nodes, startNodeId) {\n    if (this.isServerSide()) {\n      throw new PSVError('Cannot set nodes in server side mode');\n    }\n\n    this.datasource.setNodes(nodes);\n\n    if (!startNodeId) {\n      startNodeId = nodes[0].id;\n    }\n    else if (!this.datasource.nodes[startNodeId]) {\n      startNodeId = nodes[0].id;\n      utils.logWarn(`startNodeId not found is provided nodes, resetted to ${startNodeId}`);\n    }\n\n    this.setCurrentNode(startNodeId);\n\n    if (this.gallery) {\n      this.gallery.setItems(\n        nodes.map(node => ({\n          id       : node.id,\n          panorama : node.panorama,\n          name     : node.name,\n          thumbnail: node.thumbnail,\n          options  : {\n            caption         : node.caption,\n            panoData        : node.panoData,\n            sphereCorrection: node.sphereCorrection,\n            description     : node.description,\n          },\n        })),\n        (id) => {\n          this.setCurrentNode(id);\n          this.gallery.hide();\n        }\n      );\n    }\n  }\n\n  /**\n   * @summary Changes the current node\n   * @param {string} nodeId\n   * @param {PSV.plugins.VirtualTourPlugin.NodeLink} [fromLink]\n   * @returns {Promise<boolean>} resolves false if the loading was aborted by another call\n   */\n  setCurrentNode(nodeId, fromLink = null) {\n    if (nodeId === this.prop.currentNode?.id) {\n      return Promise.resolve(true);\n    }\n\n    this.psv.hideError();\n\n    this.prop.loadingNode = nodeId;\n\n    const fromNode = this.prop.currentNode;\n    const fromLinkPosition = fromNode && fromLink ? this.__getLinkPosition(fromNode, fromLink) : null;\n\n    return Promise.all([\n      // if this node is already preloading, wait for it\n      Promise.resolve(this.preload[nodeId])\n        .then(() => {\n          if (this.prop.loadingNode !== nodeId) {\n            throw utils.getAbortError();\n          }\n\n          return this.datasource.loadNode(nodeId);\n        }),\n      Promise.resolve(fromLinkPosition ? this.config.rotateSpeed : false)\n        .then((speed) => { // eslint-disable-line consistent-return\n          if (speed) {\n            return this.psv.animate({ ...fromLinkPosition, speed });\n          }\n        })\n        .then(() => {\n          this.psv.loader.show();\n        }),\n    ])\n      .then(([node]) => {\n        if (this.prop.loadingNode !== nodeId) {\n          throw utils.getAbortError();\n        }\n\n        this.prop.currentNode = node;\n\n        if (this.prop.currentTooltip) {\n          this.prop.currentTooltip.hide();\n          this.prop.currentTooltip = null;\n        }\n\n        if (this.is3D()) {\n          this.arrowsGroup.remove(...this.arrowsGroup.children.filter(o => o.type === 'Mesh'));\n        }\n\n        this.markers?.clearMarkers();\n        this.compass?.clearHotspots();\n\n        return this.psv.setPanorama(node.panorama, {\n          transition      : this.config.transition,\n          caption         : node.caption,\n          description     : node.description,\n          panoData        : node.panoData,\n          sphereCorrection: node.sphereCorrection,\n        })\n          .then((completed) => {\n            if (!completed) {\n              throw utils.getAbortError();\n            }\n          });\n      })\n      .then(() => {\n        if (this.prop.loadingNode !== nodeId) {\n          throw utils.getAbortError();\n        }\n\n        const node = this.prop.currentNode;\n\n        if (node.markers) {\n          if (this.markers) {\n            this.markers.setMarkers(node.markers);\n          }\n          else {\n            utils.logWarn(`Node ${node.id} markers ignored because the plugin is not loaded.`);\n          }\n        }\n\n        this.__renderLinks(node);\n        this.__preload(node);\n\n        /**\n         * @event node-changed\n         * @memberof PSV.plugins.VirtualTourPlugin\n         * @summary Triggered when the current node is changed\n         * @param {string} nodeId\n         * @param {PSV.plugins.VirtualTourPlugin.NodeChangedData} data\n         */\n        this.trigger(EVENTS.NODE_CHANGED, nodeId, {\n          fromNode,\n          fromLink,\n          fromLinkPosition,\n        });\n\n        this.prop.loadingNode = null;\n\n        return true;\n      })\n      .catch((err) => {\n        if (utils.isAbortError(err)) {\n          return false;\n        }\n\n        this.psv.showError(this.psv.config.lang.loadError);\n\n        this.psv.loader.hide();\n        this.psv.navbar.setCaption('');\n\n        this.prop.loadingNode = null;\n\n        throw err;\n      });\n  }\n\n  /**\n   * @summary Adds the links for the node\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @private\n   */\n  __renderLinks(node) {\n    const positions = [];\n\n    node.links.forEach((link) => {\n      const position = this.__getLinkPosition(node, link);\n      positions.push(position);\n\n      if (this.is3D()) {\n        const mesh = new Mesh(ARROW_GEOM, new MeshLambertMaterial());\n        mesh.userData = { [LINK_DATA]: link, longitude: position.longitude };\n        mesh.rotation.order = 'YXZ';\n        mesh.rotateY(-position.longitude);\n        this.psv.dataHelper\n          .sphericalCoordsToVector3({ longitude: position.longitude, latitude: 0 }, mesh.position)\n          .multiplyScalar(1 / CONSTANTS.SPHERE_RADIUS);\n\n        const outlineMesh = new Mesh(ARROW_OUTLINE_GEOM, new MeshBasicMaterial({ side: BackSide }));\n        outlineMesh.position.copy(mesh.position);\n        outlineMesh.rotation.copy(mesh.rotation);\n\n        setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\n        setMeshColor(outlineMesh, link.arrowStyle?.outlineColor || this.config.arrowStyle.outlineColor);\n\n        this.arrowsGroup.add(mesh);\n        this.arrowsGroup.add(outlineMesh);\n      }\n      else {\n        if (this.isGps()) {\n          position.latitude += this.config.markerLatOffset;\n        }\n\n        this.markers.addMarker({\n          ...this.config.markerStyle,\n          ...link.markerStyle,\n          id      : `tour-link-${link.nodeId}`,\n          tooltip : link.name,\n          visible : true,\n          hideList: true,\n          content : null,\n          data    : { [LINK_DATA]: link },\n          ...position,\n        }, false);\n      }\n    });\n\n    if (this.is3D()) {\n      this.__positionArrows();\n    }\n    else {\n      this.markers.renderMarkers();\n    }\n\n    if (this.config.linksOnCompass && this.compass) {\n      this.compass.setHotspots(positions);\n    }\n  }\n\n  /**\n   * @summary Computes the marker position for a link\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n   * @return {PSV.Position}\n   * @private\n   */\n  __getLinkPosition(node, link) {\n    if (this.isGps()) {\n      const p1 = [MathUtils.degToRad(node.position[0]), MathUtils.degToRad(node.position[1])];\n      const p2 = [MathUtils.degToRad(link.position[0]), MathUtils.degToRad(link.position[1])];\n      const h1 = node.position[2] !== undefined ? node.position[2] : link.position[2] || 0;\n      const h2 = link.position[2] !== undefined ? link.position[2] : node.position[2] || 0;\n\n      let latitude = 0;\n      if (h1 !== h2) {\n        latitude = Math.atan((h2 - h1) / distance(p1, p2));\n      }\n\n      const longitude = bearing(p1, p2);\n\n      return { longitude, latitude };\n    }\n    else {\n      return this.psv.dataHelper.cleanPosition(link);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onEnterObject(mesh, viewerPoint) {\n    const link = mesh.userData[LINK_DATA];\n\n    setMeshColor(mesh, link.arrowStyle?.hoverColor || this.config.arrowStyle.hoverColor);\n\n    if (link.name) {\n      this.prop.currentTooltip = this.psv.tooltip.create({\n        left   : viewerPoint.x,\n        top    : viewerPoint.y,\n        content: link.name,\n      });\n    }\n\n    this.psv.needsUpdate();\n  }\n\n\n  /**\n   * @private\n   */\n  __onHoverObject(mesh, viewerPoint) {\n    if (this.prop.currentTooltip) {\n      this.prop.currentTooltip.move({\n        left: viewerPoint.x,\n        top : viewerPoint.y,\n      });\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  __onLeaveObject(mesh) {\n    const link = mesh.userData[LINK_DATA];\n\n    setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\n\n    if (this.prop.currentTooltip) {\n      this.prop.currentTooltip.hide();\n      this.prop.currentTooltip = null;\n    }\n\n    this.psv.needsUpdate();\n  }\n\n  /**\n   * @summary Updates to position of the group of arrows\n   * @private\n   */\n  __positionArrows() {\n    this.arrowsGroup.position.copy(this.psv.prop.direction).multiplyScalar(0.5);\n    const s = this.config.arrowStyle.scale;\n    const f = s[1] + (s[0] - s[1]) * (this.psv.getZoomLevel() / 100);\n    const y = 2.5 - (this.psv.getZoomLevel() / 100) * 1.5;\n    this.arrowsGroup.position.y += this.config.arrowPosition === 'bottom' ? -y : y;\n    this.arrowsGroup.scale.set(f, f, f);\n  }\n\n  /**\n   * @summary Manage the preload of the linked panoramas\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @private\n   */\n  __preload(node) {\n    if (!this.config.preload) {\n      return;\n    }\n\n    this.preload[node.id] = true;\n\n    this.prop.currentNode.links\n      .filter(link => !this.preload[link.nodeId])\n      .filter((link) => {\n        if (typeof this.config.preload === 'function') {\n          return this.config.preload(this.prop.currentNode, link);\n        }\n        else {\n          return true;\n        }\n      })\n      .forEach((link) => {\n        this.preload[link.nodeId] = this.datasource.loadNode(link.nodeId)\n          .then((linkNode) => {\n            return this.psv.textureLoader.preloadPanorama(linkNode.panorama);\n          })\n          .then(() => {\n            this.preload[link.nodeId] = true;\n          })\n          .catch(() => {\n            delete this.preload[link.nodeId];\n          });\n      });\n  }\n\n}\n"],"names":["AbstractDatasource","plugin","nodes","destroy","loadNode","nodeId","PSVError","checkNode","node","isGps","id","panorama","position","length","checkLink","link","utils","isExtendedPosition","setMeshColor","mesh","color","material","set","distance","p1","p2","greatArcDistance","bearing","λ1","φ1","λ2","φ2","y","Math","sin","cos","x","atan2","ClientSideDatasource","Promise","resolve","reject","setNodes","rawNodes","linkedNodes","forEach","links","logWarn","name","MODE_CLIENT","MODE_SERVER","MODE_MANUAL","MODE_GPS","MODE_MARKERS","MODE_3D","EVENTS","NODE_CHANGED","LINK_DATA","DEFAULT_MARKER","html","arrowIconSvg","width","height","scale","anchor","className","style","DEFAULT_ARROW","hoverColor","outlineColor","loader","ObjectLoader","geometries","parseGeometries","arrowGeometryJson","arrowOutlineGeometryJson","arrow","uuid","arrowOutline","rot","PI","rotateX","ARROW_GEOM","ARROW_OUTLINE_GEOM","ServerSideDatasource","config","getNode","nodeResolver","then","VirtualTourPlugin","psv","options","prop","currentNode","currentTooltip","loadingNode","stopObserver","preload","dataMode","positionMode","renderMode","rotateSpeed","transition","CONSTANTS","DEFAULT_TRANSITION","markerLatOffset","arrowPosition","linksOnCompass","markerStyle","arrowStyle","markers","compass","gallery","datasource","arrowsGroup","is3D","Group","localLight","PointLight","add","init","getPlugin","isServerSide","once","READY","__positionArrows","renderer","scene","ambientLight","AmbientLight","needsUpdate","on","POSITION_UPDATED","ZOOM_UPDATED","CLICK","observeObjects","startNodeId","setCurrentNode","off","remove","handleEvent","e","type","args","data","objects","find","o","userData","OBJECT_EVENTS","ENTER_OBJECT","__onEnterObject","detail","object","viewerPoint","HOVER_OBJECT","__onHoverObject","LEAVE_OBJECT","__onLeaveObject","setItems","map","thumbnail","caption","panoData","sphereCorrection","description","hide","fromLink","hideError","fromNode","fromLinkPosition","__getLinkPosition","all","getAbortError","speed","animate","show","children","filter","clearMarkers","clearHotspots","setPanorama","completed","setMarkers","__renderLinks","__preload","trigger","catch","err","isAbortError","showError","lang","loadError","navbar","setCaption","positions","push","Mesh","MeshLambertMaterial","longitude","rotation","order","rotateY","dataHelper","sphericalCoordsToVector3","latitude","multiplyScalar","SPHERE_RADIUS","outlineMesh","MeshBasicMaterial","side","BackSide","copy","addMarker","tooltip","visible","hideList","content","renderMarkers","setHotspots","MathUtils","degToRad","h1","undefined","h2","atan","cleanPosition","create","left","top","move","direction","s","f","getZoomLevel","linkNode","textureLoader","preloadPanorama","AbstractPlugin"],"mappings":"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"}