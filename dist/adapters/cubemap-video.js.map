{"version":3,"file":"cubemap-video.js","sources":["../../src/adapters/shared/AbstractVideoAdapter.js","../../src/adapters/cubemap-video/index.js"],"sourcesContent":["import { VideoTexture } from 'three';\nimport { AbstractAdapter, CONSTANTS, PSVError } from '../..';\n\n/**\n * @typedef {Object} PSV.adapters.AbstractVideoAdapter.Video\n * @summary Object defining a video\n * @property {string} source\n */\n\n/**\n * @typedef {Object} PSV.adapters.AbstractVideoAdapter.Options\n * @property {boolean} [autoplay=false] - automatically start the video\n * @property {boolean} [muted=autoplay] - initially mute the video\n */\n\n/**\n * @summary Base video adapters class\n * @memberof PSV.adapters\n * @abstract\n * @private\n */\nexport class AbstractVideoAdapter extends AbstractAdapter {\n\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {PSV.adapters.AbstractVideoAdapter.Options}\n     * @private\n     */\n    this.config = {\n      autoplay: false,\n      muted   : options?.autoplay ?? false,\n      ...options,\n    };\n\n    /**\n     * @member {HTMLVideoElement}\n     * @private\n     */\n    this.video = null;\n\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n\n    this.__removeVideo();\n\n    super.destroy();\n  }\n\n  /**\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      case CONSTANTS.EVENTS.BEFORE_RENDER:\n        if (this.video) {\n          this.psv.needsUpdate();\n        }\n        break;\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @param {PSV.adapters.AbstractVideoAdapter.Video} panorama\n   * @returns {Promise.<PSV.TextureData>}\n   */\n  loadTexture(panorama) {\n    if (typeof panorama !== 'object' || !panorama.source) {\n      return Promise.reject(new PSVError('Invalid panorama configuration, are you using the right adapter?'));\n    }\n\n    if (!this.psv.getPlugin('video')) {\n      return Promise.reject(new PSVError('Video adapters require VideoPlugin to be loaded too.'));\n    }\n\n    const video = this.__createVideo(panorama.source);\n\n    return this.__videoLoadPromise(video)\n      .then(() => {\n        const texture = new VideoTexture(video);\n        return { panorama, texture };\n      });\n  }\n\n  /**\n   * @override\n   */\n  __switchVideo(texture) {\n    let currentTime;\n    let duration;\n    let paused = !this.config.autoplay;\n    let muted = this.config.muted;\n    let volume = 1;\n    if (this.video) {\n      ({ currentTime, duration, paused, muted, volume } = this.video);\n    }\n\n    this.__removeVideo();\n    this.video = texture.image;\n\n    // keep current time when switching resolution\n    if (this.video.duration === duration) {\n      this.video.currentTime = currentTime;\n    }\n\n    // keep volume\n    this.video.muted = muted;\n    this.video.volume = volume;\n\n    // play\n    if (!paused) {\n      this.video.play();\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeTexture(textureData) {\n    if (textureData.texture) {\n      const video = textureData.texture.image;\n      video.pause();\n      this.psv.container.removeChild(video);\n    }\n    textureData.texture?.dispose();\n  }\n\n  /**\n   * @summary Removes the current video element\n   * @private\n   */\n  __removeVideo() {\n    if (this.video) {\n      this.video.pause();\n      this.psv.container.removeChild(this.video);\n      delete this.video;\n    }\n  }\n\n  /**\n   * @summary Creates a new video element\n   * @memberOf PSV.adapters\n   * @param {string} src\n   * @return {HTMLVideoElement}\n   * @private\n   */\n  __createVideo(src) {\n    const video = document.createElement('video');\n    video.crossOrigin = this.psv.config.withCredentials ? 'use-credentials' : 'anonymous';\n    video.loop = true;\n    video.playsinline = true;\n    video.style.display = 'none';\n    video.muted = this.config.muted;\n    video.src = src;\n    video.preload = 'metadata';\n\n    this.psv.container.appendChild(video);\n\n    return video;\n  }\n\n  /**\n   * @private\n   */\n  __videoLoadPromise(video) {\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      video.addEventListener('loadedmetadata', function onLoaded() {\n        if (this.video && video.duration === this.video.duration) {\n          resolve(self.__videoBufferPromise(video, this.video.currentTime));\n        }\n        else {\n          resolve();\n        }\n        video.removeEventListener('loadedmetadata', onLoaded);\n      });\n\n      video.addEventListener('error', function onError(err) {\n        reject(err);\n        video.removeEventListener('error', onError);\n      });\n    });\n  }\n\n  /**\n   * @private\n   */\n  __videoBufferPromise(video, currentTime) {\n    return new Promise((resolve) => {\n      function onBuffer() {\n        const buffer = video.buffered;\n        for (let i = 0, l = buffer.length; i < l; i++) {\n          if (buffer.start(i) <= video.currentTime && buffer.end(i) >= video.currentTime) {\n            video.pause();\n            video.removeEventListener('buffer', onBuffer);\n            video.removeEventListener('progress', onBuffer);\n            resolve();\n            break;\n          }\n        }\n      }\n\n      // try to reduce the switching time by preloading in advance\n      // FIXME find a better way ?\n      video.currentTime = Math.min(currentTime + 2000, video.duration.currentTime);\n      video.muted = true;\n\n      video.addEventListener('buffer', onBuffer);\n      video.addEventListener('progress', onBuffer);\n\n      video.play();\n    });\n  }\n\n}\n","import { BoxGeometry, Mesh, ShaderMaterial, Vector2 } from 'three';\nimport { CONSTANTS } from '../..';\nimport { AbstractVideoAdapter } from '../shared/AbstractVideoAdapter';\n\n/**\n * @typedef {Object} PSV.adapters.CubemapVideoAdapter.Video\n * @summary Object defining a video\n * @property {string} source\n */\n\n/**\n * @typedef {Object} PSV.adapters.CubemapVideoAdapter.Options\n * @property {boolean} [autoplay=false] - automatically start the video\n * @property {boolean} [muted=autoplay] - initially mute the video\n * @property {number} [equiangular=true] - if the video is an equiangular cubemap (EAC)\n */\n\n\n/**\n * @summary Adapter for cubemap videos\n * @memberof PSV.adapters\n * @extends PSV.adapters.AbstractAdapter\n */\nexport class CubemapVideoAdapter extends AbstractVideoAdapter {\n\n  static id = 'cubemap-video';\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.adapters.CubemapVideoAdapter.Options} options\n   */\n  constructor(psv, options) {\n    super(psv, {\n      equiangular: true,\n      ...options,\n    });\n  }\n\n  /**\n   * @override\n   * @param {PSV.adapters.CubemapVideoAdapter.Video} panorama\n   * @returns {Promise.<PSV.TextureData>}\n   */\n  loadTexture(panorama) {\n    return super.loadTexture(panorama);\n  }\n\n  /**\n   * @override\n   */\n  createMesh(scale = 1) {\n    const cubeSize = CONSTANTS.SPHERE_RADIUS * 2 * scale;\n    const geometry = new BoxGeometry(cubeSize, cubeSize, cubeSize)\n      .scale(1, 1, -1)\n      .toNonIndexed();\n\n    geometry.clearGroups();\n\n    const uvs = geometry.getAttribute('uv');\n\n    /*\n      Structure of a frame\n\n      1 +---------+---------+---------+\n        |         |         |         |\n        |  Left   |  Front  |  Right  |\n        |         |         |         |\n    1/2 +---------+---------+---------+\n        |         |         |         |\n        | Bottom  |  Back   |   Top   |\n        |         |         |         |\n      0 +---------+---------+---------+\n        0        1/3       2/3        1\n\n       Bottom, Back and Top are rotated 90Â° clockwise\n     */\n\n    // columns\n    const a = 0;\n    const b = 1 / 3;\n    const c = 2 / 3;\n    const d = 1;\n\n    // lines\n    const A = 1;\n    const B = 1 / 2;\n    const C = 0;\n\n    // left\n    uvs.setXY(0, a, A);\n    uvs.setXY(1, a, B);\n    uvs.setXY(2, b, A);\n    uvs.setXY(3, a, B);\n    uvs.setXY(4, b, B);\n    uvs.setXY(5, b, A);\n\n    // right\n    uvs.setXY(6, c, A);\n    uvs.setXY(7, c, B);\n    uvs.setXY(8, d, A);\n    uvs.setXY(9, c, B);\n    uvs.setXY(10, d, B);\n    uvs.setXY(11, d, A);\n\n    // top\n    uvs.setXY(12, d, B);\n    uvs.setXY(13, c, B);\n    uvs.setXY(14, d, C);\n    uvs.setXY(15, c, B);\n    uvs.setXY(16, c, C);\n    uvs.setXY(17, d, C);\n\n    // bottom\n    uvs.setXY(18, b, B);\n    uvs.setXY(19, a, B);\n    uvs.setXY(20, b, C);\n    uvs.setXY(21, a, B);\n    uvs.setXY(22, a, C);\n    uvs.setXY(23, b, C);\n\n    // back\n    uvs.setXY(24, c, B);\n    uvs.setXY(25, b, B);\n    uvs.setXY(26, c, C);\n    uvs.setXY(27, b, B);\n    uvs.setXY(28, b, C);\n    uvs.setXY(29, c, C);\n\n    // front\n    uvs.setXY(30, b, A);\n    uvs.setXY(31, b, B);\n    uvs.setXY(32, c, A);\n    uvs.setXY(33, b, B);\n    uvs.setXY(34, c, B);\n    uvs.setXY(35, c, A);\n\n    // shamelessly copied from https://github.com/videojs/videojs-vr\n    const material = new ShaderMaterial({\n      uniforms      : {\n        mapped     : { value: null },\n        contCorrect: { value: 1 },\n        faceWH     : { value: new Vector2(1 / 3, 1 / 2) },\n        vidWH      : { value: new Vector2(1, 1) },\n      },\n      vertexShader  : `\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}`,\n      fragmentShader: `\nvarying vec2 vUv;\nuniform sampler2D mapped;\nuniform vec2 faceWH;\nuniform vec2 vidWH;\nuniform float contCorrect;\n\nconst float PI = 3.1415926535897932384626433832795;\n\nvoid main() {\n  vec2 corner = vUv - mod(vUv, faceWH) + vec2(0, contCorrect / vidWH.y);\n  vec2 faceWHadj = faceWH - vec2(0, contCorrect * 2. / vidWH.y);\n  vec2 p = (vUv - corner) / faceWHadj - .5;\n  vec2 q = ${this.config.equiangular ? '2. / PI * atan(2. * p) + .5' : 'p + .5'};\n  vec2 eUv = corner + q * faceWHadj;\n  gl_FragColor = texture2D(mapped, eUv);\n}`,\n    });\n\n    return new Mesh(geometry, material);\n  }\n\n  /**\n   * @override\n   */\n  setTexture(mesh, textureData) {\n    const { texture } = textureData;\n\n    mesh.material.uniforms.mapped.value?.dispose();\n    mesh.material.uniforms.mapped.value = texture;\n    mesh.material.uniforms.vidWH.value.set(texture.image.videoWidth, texture.image.videoHeight);\n\n    this.__switchVideo(textureData.texture);\n  }\n\n}\n"],"names":["AbstractVideoAdapter","psv","options","config","autoplay","muted","video","on","CONSTANTS","EVENTS","BEFORE_RENDER","destroy","off","__removeVideo","handleEvent","e","type","needsUpdate","loadTexture","panorama","source","Promise","reject","PSVError","getPlugin","__createVideo","__videoLoadPromise","then","texture","VideoTexture","__switchVideo","currentTime","duration","paused","volume","image","play","disposeTexture","textureData","pause","container","removeChild","dispose","src","document","createElement","crossOrigin","withCredentials","loop","playsinline","style","display","preload","appendChild","self","resolve","addEventListener","onLoaded","__videoBufferPromise","removeEventListener","onError","err","onBuffer","buffer","buffered","i","l","length","start","end","Math","min","AbstractAdapter","CubemapVideoAdapter","equiangular","createMesh","scale","cubeSize","SPHERE_RADIUS","geometry","BoxGeometry","toNonIndexed","clearGroups","uvs","getAttribute","a","b","c","d","A","B","C","setXY","material","ShaderMaterial","uniforms","mapped","value","contCorrect","faceWH","Vector2","vidWH","vertexShader","fragmentShader","Mesh","setTexture","mesh","set","videoWidth","videoHeight","id"],"mappings":"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"}